# Nathan Murray Prototype Temperature on/off sensor
#7 bit address is x40, therefore 8 bit address is x80

dim temp_old
dim temp
dim temp_comparison
dim result_temp
dim written
dim result
dim data_len
dim data (3)
dim string(3)
dim compare
dim initial_count
dim temp1(4)
dim temp2
dim test
dim count
dim tmp(5)
dim output_temp (6)

event system_boot(major ,minor ,patch ,build ,ll_version ,protocol_version ,hw)
    call hardware_set_soft_timer($28000, 1, 0)
    call gap_set_mode($84, gap_non_connectable)	# $84 to enable enhanced broadcasting (central node will acknowledge receipt of a broadcast
    call gap_set_adv_parameters(200, 200, $04)
end



event hardware_soft_timer(handle)

	if (handle = 1) then #Main timer called
		output_temp(0:1) = $59	#serial number byte 1 
		output_temp(1:1) = $D9  #serial number byte 2 (59D9 = 23001 in decimal)
	
		call hardware_i2c_write($80,1,1,"\xE3")(written) # write to temperature conversion register
		call hardware_i2c_read($80,1,2)(result,data_len,data(0:data_len)) # read temperature result plus CRC (3rd CRC byte is not transmitted)
		temp = data(0:2)#store data into array
		temp = (temp >> 8)#bit shift by 8 to get LSB
		temp2 = data(0:2) #Get upper 8 bits again

		output_temp(2:1) = temp2 #store upper 8 bits to array
		output_temp(3:1) = temp #store lower 8 bits to array
		output_temp(4:1) = $FF #end of message byte
		output_temp(5:1) = $FF #end of message byte
		call gap_set_adv_data(0, 6, output_temp(0:6)) # send result to central node

		call hardware_set_soft_timer( 0, 1, 1) #disable current timer as only one timer can run at a time
		call hardware_set_soft_timer(32678, 2, 1)#call single one shot timer handle 2 which is a timeout for transmissions if the central node hasn't acknowledged

	end if


	if (handle = 2) then
		call gap_set_mode(0, 0)	# disable GAP broadcasts and go back to sleep
		call hardware_set_soft_timer($28000, 1, 0) # re enable old timer
	end if

end

event gap_scan_response(rssi, packet_type, sender, address_type, bond, data_len, data_data) # central node has acknowledged
	if packet_type = 3 then	#central node has acknowledged receipt of sent data
		call gap_set_mode(0, 0)	#end broadcasts so processor can go back to sleep and discontinue transmissions
	end if
end
