dim no_ack_count	# counter for central node no acknowledgement count
dim ack_response	# counter for central node acknowledge response flag

event system_boot(major ,minor ,patch ,build ,ll_version ,protocol_version ,hw)

	call hardware_io_port_config_irq(0, $01, 0) #Enable interrupt on port 0_0 rising edge
	#call hardware_io_port_config_irq(1, $01, 0) #Enable interrupt on port 1_0 rising edge
call hardware_set_txpower(15)

call gap_set_adv_parameters($200, $200, $07)    	
call gap_set_mode(0, 0)	
   	no_ack_count = 0	#initialise counter
	ack_response = 0	#initialise counter
end


# procedure to output ASCII-formatted integer from a Hex value (input range [0, 2147483647]) obtained from https://bluegiga.zendesk.com/entries/83269447-Convert-digit-to-ascii-hex-equivalent
dim x_int_work(9)
dim x_int_out(11)
procedure print_uint31(endpoint, num)
    x_int_work(0:1) = "\x00"
    x_int_work(1:4) = num
    if x_int_work(1:4) = 0 then
        x_int_out(10 - x_int_work(0:1):1) = "0"       # already zero, so just use it
        x_int_work(0:1) = x_int_work(0:1) + 1         # string length increment
    else
        while x_int_work(1:4) > 0
            x_int_work(5:4) = (x_int_work(1:4) / 10) * 10     # create "decimal mask" for diff calc
            x_int_out(10 - x_int_work(0:1):1) = x_int_work(1:4) - x_int_work(5:4) + $30 # next digit
            x_int_work(0:1) = x_int_work(0:1) + 1             # string length increment
            x_int_work(1:4) = x_int_work(1:4) / 10            # shift next decimal place over
        end while
    end if
    call system_endpoint_tx(endpoint, x_int_work(0:1), x_int_out(11 - x_int_work(0:1):x_int_work(0:1)))
end

event gap_scan_response(rssi, packet_type, sender, address_type, bond, data_len, data_data)
	if packet_type = 3 then
		ack_response = 1
		call gap_set_mode(0, 0)
	end if
end

event hardware_io_port_status(timestamp, port, irq, state)

#call gap_set_adv_parameters($3000, $4000, $07)
	no_ack_count = 0
	call gap_set_adv_data(0, 1, $1003)					# send ADC result to central node
call gap_set_mode($84, gap_scannable_non_connectable)	# $84 to enable enhanced broadcasting (central node will acknowlwdge receipt of a broadcast
	end